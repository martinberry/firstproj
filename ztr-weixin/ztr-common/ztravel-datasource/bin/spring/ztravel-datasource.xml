<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<bean class="com.travelzen.framework.config.tops.TzPropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="tzProperties">
			<list>
				<value>R:properties/postgres-jdbc.properties</value>
			</list>
		</property>
	</bean>

	<bean id="ztravel-dataSource-online-master" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
			<property name="dataSourceName" value="ds-ztravel-online-master" />
			<property name="driverClass" value="${jdbc.driver}" />
			<property name="jdbcUrl" value="${jdbc.url.ztravel-master}" />
			<property name="user" value="${jdbc.username.ztravel}" />
			<property name="password" value="${jdbc.password.ztravel}" />
			<property name="initialPoolSize" value="${jdbc.ztravel.initialPoolSize.master.online}" />
			<property name="minPoolSize" value="${jdbc.ztravel.minPoolSize.master.online}" />
			<property name="maxPoolSize" value="${jdbc.ztravel.maxPoolSize.master.online}" />
			<property name="preferredTestQuery" value="SELECT NOW()" />
			<property name="checkoutTimeout" value="${jdbc.ztravel.checkoutTimeout}" />
			<property name="testConnectionOnCheckin" value="true" />
			<property name="testConnectionOnCheckout" value="true" />
			<property name="maxIdleTimeExcessConnections" value="10" />
		</bean>

		<bean id="ztravel-dataSource-offline-master" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
			<property name="dataSourceName" value="ds-ztravel-offline-master" />
			<property name="driverClass" value="${jdbc.driver}" />
			<property name="jdbcUrl" value="${jdbc.url.ztravel-slave}" />
			<property name="user" value="${jdbc.username.ztravel}" />
			<property name="password" value="${jdbc.password.ztravel}" />
			<property name="initialPoolSize" value="${jdbc.ztravel.initialPoolSize.master.offline}" />
			<property name="minPoolSize" value="${jdbc.ztravel.minPoolSize.master.offline}" />
			<property name="maxPoolSize" value="${jdbc.ztravel.maxPoolSize.master.offline}" />
			<property name="preferredTestQuery" value="SELECT NOW()" />
			<property name="checkoutTimeout" value="${jdbc.ztravel.checkoutTimeout}" />
			<property name="testConnectionOnCheckin" value="true" />
			<property name="testConnectionOnCheckout" value="true" />
			<property name="maxIdleTimeExcessConnections" value="10" />
		</bean>

		<util:map id="ztravel-dataSourceCluster-online">
			<entry key="master-1" value-ref="ztravel-dataSource-online-master" />
		</util:map>

		<util:map id="ztravel-dataSourceCluster-offline">
			<entry key="master-1" value-ref="ztravel-dataSource-offline-master" />
			<entry key="slave-1" value-ref="ztravel-dataSource-online-master" />
		</util:map>

		<bean id="ztravel-dataSourceLookup-online" class="org.springframework.jdbc.datasource.lookup.MapDataSourceLookup">
			<constructor-arg ref="ztravel-dataSourceCluster-online" />
		</bean>
		<bean id="ztravel-dataSourceLookup-offline" class="org.springframework.jdbc.datasource.lookup.MapDataSourceLookup">
			<constructor-arg ref="ztravel-dataSourceCluster-offline" />
		</bean>

		<bean id="ztravel-dataSource-online" class="com.travelzen.framework.dao.rdbms.FailoverAndLoadBalanceDataSource">
			<property name="targetDataSources" ref="ztravel-dataSourceCluster-online" />
			<property name="defaultTargetDataSource" ref="ztravel-dataSource-online-master" />
			<property name="dataSourceLookup" ref="ztravel-dataSourceLookup-online" />
			<property name="checkIntervalsec" value="3000" />
			<property name="masterDataSourceSelectStrategy">
				<value type="com.travelzen.framework.dao.rdbms.FailoverAndLoadBalanceDataSource$DataSourceSelectStrategy">random</value>
			</property>
			<property name="slaveDataSourceSelectStrategy">
				<value type="com.travelzen.framework.dao.rdbms.FailoverAndLoadBalanceDataSource$DataSourceSelectStrategy">random</value>
			</property>
		</bean>
		<bean id="ztravel-dataSource-offline" class="com.travelzen.framework.dao.rdbms.FailoverAndLoadBalanceDataSource">
			<property name="targetDataSources" ref="ztravel-dataSourceCluster-offline" />
			<property name="defaultTargetDataSource" ref="ztravel-dataSource-offline-master" />
			<property name="dataSourceLookup" ref="ztravel-dataSourceLookup-offline" />
			<property name="checkIntervalsec" value="3000" />
			<property name="masterDataSourceSelectStrategy">
				<value type="com.travelzen.framework.dao.rdbms.FailoverAndLoadBalanceDataSource$DataSourceSelectStrategy">random</value>
			</property>
			<property name="slaveDataSourceSelectStrategy">
				<value type="com.travelzen.framework.dao.rdbms.FailoverAndLoadBalanceDataSource$DataSourceSelectStrategy">random</value>
			</property>
		</bean>
		<util:map id="ztravel-dataSourceType">
			<entry key="online" value-ref="ztravel-dataSource-online" />
			<entry key="offline" value-ref="ztravel-dataSource-offline" />
		</util:map>
		<bean id="ztravel-dataSource" class="com.travelzen.framework.dao.rdbms.dataSource.DynamicDataSource">
			<property name="targetDataSources" ref="ztravel-dataSourceType" />
			<property name="defaultTargetDataSource" ref="ztravel-dataSource-online" />
		</bean>
</beans>